/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projekt1;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.border.BevelBorder;

/**
 *
 * @author Marko
 */
public class KPSKS extends javax.swing.JFrame {
    
    Algoritem algoritem;

    /**
     * Creates new form KPSKS
     */
    public KPSKS() {
        initComponents();
        
        // Kontrolni poskus
        //algoritem = new PredictiveAlgoritem(PredictiveAlgoritem.NACIN_NASPROTNIKOVE_POTEZE, 5, PredictiveAlgoritem.UTEZITEV_LINEARNO, PredictiveAlgoritem.UTEZITEV_NEOBTEZENO, PredictiveAlgoritem.IZBIRANJE_RANDOM, false);
        
        
        //algoritem = new PredictiveAlgoritem(PredictiveAlgoritem.NACIN_NASPROTNIKOVE_POTEZE, 5, PredictiveAlgoritem.UTEZITEV_EKSPONENTNO, PredictiveAlgoritem.UTEZITEV_NEOBTEZENO, PredictiveAlgoritem.IZBIRANJE_RANDOM, false);
        //algoritem = new PredictiveAlgoritem(PredictiveAlgoritem.NACIN_NASPROTNIKOVE_POTEZE, 20, PredictiveAlgoritem.UTEZITEV_LINEARNO, PredictiveAlgoritem.UTEZITEV_NEOBTEZENO, PredictiveAlgoritem.IZBIRANJE_RANDOM, false);
        //algoritem = new PredictiveAlgoritem(PredictiveAlgoritem.NACIN_NASPROTNIKOVE_POTEZE, 5, PredictiveAlgoritem.UTEZITEV_LINEARNO, PredictiveAlgoritem.UTEZITEV_LINEARNO, PredictiveAlgoritem.IZBIRANJE_RANDOM, false);
        //algoritem = new PredictiveAlgoritem(PredictiveAlgoritem.NACIN_NASPROTNIKOVE_POTEZE, 5, PredictiveAlgoritem.UTEZITEV_LINEARNO, PredictiveAlgoritem.UTEZITEV_EKSPONENTNO, PredictiveAlgoritem.IZBIRANJE_RANDOM, false);
        //algoritem = new PredictiveAlgoritem(PredictiveAlgoritem.NACIN_NASPROTNIKOVE_POTEZE, 5, PredictiveAlgoritem.UTEZITEV_LINEARNO, PredictiveAlgoritem.UTEZITEV_NEOBTEZENO, PredictiveAlgoritem.IZBIRANJE_PAMETNO, false);
        //algoritem = new PredictiveAlgoritem(PredictiveAlgoritem.NACIN_POTEZE_OBEH, 5, PredictiveAlgoritem.UTEZITEV_LINEARNO, PredictiveAlgoritem.UTEZITEV_NEOBTEZENO, PredictiveAlgoritem.IZBIRANJE_RANDOM, false);
       
        algoritem = new PredictiveAlgoritem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        result_panel = new javax.swing.JPanel();
        player = new javax.swing.JLabel();
        computer = new javax.swing.JLabel();
        player_score = new javax.swing.JLabel();
        computer_score = new javax.swing.JLabel();
        dvopicje = new javax.swing.JLabel();
        player_panel = new javax.swing.JPanel();
        rock = new javax.swing.JButton();
        spock = new javax.swing.JButton();
        paper = new javax.swing.JButton();
        lizard = new javax.swing.JButton();
        scissors = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        player_chosen = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        computer_panel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        computer_chosen = new javax.swing.JLabel();
        rock1 = new javax.swing.JButton();
        spock1 = new javax.swing.JButton();
        lizard1 = new javax.swing.JButton();
        scissors1 = new javax.swing.JButton();
        paper1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        new_game = new javax.swing.JMenuItem();
        statistics = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rock Paper Scissors Lizard Spock");
        setLocation(new java.awt.Point(0, 0));
        setLocationByPlatform(true);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        result_panel.setBackground(new java.awt.Color(185, 255, 185));

        player.setFont(new java.awt.Font("Arial Rounded MT Bold", 3, 36)); // NOI18N
        player.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player.setText("PLAYER");

        computer.setFont(new java.awt.Font("Arial Rounded MT Bold", 3, 36)); // NOI18N
        computer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        computer.setText("COMPUTER");

        player_score.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 70)); // NOI18N
        player_score.setForeground(java.awt.Color.blue);
        player_score.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player_score.setText("0");

        computer_score.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 70)); // NOI18N
        computer_score.setForeground(java.awt.Color.blue);
        computer_score.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        computer_score.setText("0");

        dvopicje.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 70)); // NOI18N
        dvopicje.setForeground(java.awt.Color.blue);
        dvopicje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dvopicje.setText(":");

        javax.swing.GroupLayout result_panelLayout = new javax.swing.GroupLayout(result_panel);
        result_panel.setLayout(result_panelLayout);
        result_panelLayout.setHorizontalGroup(
            result_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(result_panelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(player, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(player_score, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dvopicje, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(computer_score, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(computer, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        result_panelLayout.setVerticalGroup(
            result_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, result_panelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(result_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(player, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(computer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(result_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(player_score, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(computer_score, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dvopicje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(504, 504, 504))
        );

        rock.setIcon(new javax.swing.ImageIcon("rock.jpg")); // NOI18N
        rock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                rockMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                rockMouseExited(evt);
            }
        });
        rock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rockActionPerformed(evt);
            }
        });

        spock.setIcon(new javax.swing.ImageIcon("spock.jpg")); // NOI18N
        spock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                spockMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                spockMouseExited(evt);
            }
        });
        spock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spockActionPerformed(evt);
            }
        });

        paper.setIcon(new javax.swing.ImageIcon("paper.jpg")); // NOI18N
        paper.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                paperMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                paperMouseExited(evt);
            }
        });
        paper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paperActionPerformed(evt);
            }
        });

        lizard.setIcon(new javax.swing.ImageIcon("lizard.jpg")); // NOI18N
        lizard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lizardMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lizardMouseExited(evt);
            }
        });
        lizard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lizardActionPerformed(evt);
            }
        });

        scissors.setIcon(new javax.swing.ImageIcon("scissors.jpg")); // NOI18N
        scissors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                scissorsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                scissorsMouseExited(evt);
            }
        });
        scissors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scissorsActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("You have chosen:");

        player_chosen.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        javax.swing.GroupLayout player_panelLayout = new javax.swing.GroupLayout(player_panel);
        player_panel.setLayout(player_panelLayout);
        player_panelLayout.setHorizontalGroup(
            player_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(player_panelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(player_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(player_panelLayout.createSequentialGroup()
                        .addGroup(player_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(player_panelLayout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(lizard, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                                .addComponent(scissors, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, player_panelLayout.createSequentialGroup()
                                .addComponent(rock, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(136, 136, 136)))
                        .addGap(42, 42, 42))
                    .addGroup(player_panelLayout.createSequentialGroup()
                        .addGroup(player_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(player_panelLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(player_chosen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(45, 45, 45))
                            .addGroup(player_panelLayout.createSequentialGroup()
                                .addComponent(spock, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(paper, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        player_panelLayout.setVerticalGroup(
            player_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(player_panelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(rock, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(player_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(spock, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paper, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(player_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lizard, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scissors, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(player_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(player_chosen, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Computer has chosen:");

        computer_chosen.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        rock1.setIcon(new javax.swing.ImageIcon("rock.jpg")); // NOI18N

        spock1.setIcon(new javax.swing.ImageIcon("spock.jpg")); // NOI18N

        lizard1.setIcon(new javax.swing.ImageIcon("lizard.jpg")); // NOI18N

        scissors1.setIcon(new javax.swing.ImageIcon("scissors.jpg")); // NOI18N

        paper1.setIcon(new javax.swing.ImageIcon("paper.jpg")); // NOI18N

        javax.swing.GroupLayout computer_panelLayout = new javax.swing.GroupLayout(computer_panel);
        computer_panel.setLayout(computer_panelLayout);
        computer_panelLayout.setHorizontalGroup(
            computer_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(computer_panelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(computer_chosen, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(computer_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(computer_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(computer_panelLayout.createSequentialGroup()
                        .addGroup(computer_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(computer_panelLayout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(lizard1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(scissors1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, computer_panelLayout.createSequentialGroup()
                                .addComponent(rock1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(136, 136, 136)))
                        .addGap(6, 6, 6))
                    .addGroup(computer_panelLayout.createSequentialGroup()
                        .addComponent(spock1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(paper1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        computer_panelLayout.setVerticalGroup(
            computer_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, computer_panelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(rock1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(computer_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(spock1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paper1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(computer_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lizard1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scissors1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(computer_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(computer_chosen, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        file.setText("File");

        new_game.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        new_game.setText("New game");
        new_game.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_gameActionPerformed(evt);
            }
        });
        file.add(new_game);

        statistics.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        statistics.setText("Statistics");
        statistics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statisticsActionPerformed(evt);
            }
        });
        file.add(statistics);

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        file.add(exit);

        jMenuBar1.add(file);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(result_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(player_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(computer_panel, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(result_panel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(player_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(computer_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    static int ties = 0;
    static int win = 0;
    static int lost = 0;
    public static ArrayList<Integer> player_history = new ArrayList<>();
    public static ArrayList<Integer> computer_history = new ArrayList<>();
    public static ArrayList<Integer> scores = new ArrayList<>();
    
    
    private void new_gameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_gameActionPerformed
        // TODO add your handling code here:
        computer_score.setText("0");
        player_score.setText("0");
        computer_chosen.setText("");
        player_chosen.setText("");
        ties = 0;
        win = 0;
        lost = 0;
        player_history.clear();
        computer_history.clear();
        scores.clear();
    }//GEN-LAST:event_new_gameActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    
    private void rockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rockActionPerformed
        // TODO add your handling code here:
        allActionPerformed(0);
    }//GEN-LAST:event_rockActionPerformed

    
    private void paperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paperActionPerformed
        // TODO add your handling code here:
        allActionPerformed(1);
    }//GEN-LAST:event_paperActionPerformed

    
    private void scissorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scissorsActionPerformed
        // TODO add your handling code here:
        allActionPerformed(2);
    }//GEN-LAST:event_scissorsActionPerformed

    
    private void lizardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lizardActionPerformed
        // TODO add your handling code here:
        allActionPerformed(3);
    }//GEN-LAST:event_lizardActionPerformed

    
    private void spockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spockActionPerformed
        // TODO add your handling code here:
        allActionPerformed(4);
    }//GEN-LAST:event_spockActionPerformed

    private void allActionPerformed (int score) {
        int com_choice = algoritem.naslednjaPoteza();
        algoritem.nasprotnikovaPoteza(score);
        
        player_history.add(score);
        computer_history.add(com_choice);
        
        player_chosen.setText(choice_to_string(score));
        computer_chosen.setText(choice_to_string(com_choice));
        
        int winner = who_wins(score, com_choice);
        
        popravi_score(winner);
        
        color_background(winner);
        
        show_computer_choice_icon (com_choice);
        
        izpisi_v_datoteko();
    }
    
    
    
    private void rockMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rockMouseEntered
        // TODO add your handling code here:
        rock.setBorderPainted(true);
        javax.swing.border.Border b = BorderFactory.createLineBorder(Color.black, 2, true);
        rock.setBorder(b);
    }//GEN-LAST:event_rockMouseEntered

    private void rockMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rockMouseExited
        // TODO add your handling code here:
        rock.setBorderPainted(false);
    }//GEN-LAST:event_rockMouseExited

    private void paperMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paperMouseEntered
        // TODO add your handling code here:
        paper.setBorderPainted(true);
        javax.swing.border.Border b = BorderFactory.createLineBorder(Color.black, 2, true);
        paper.setBorder(b);
    }//GEN-LAST:event_paperMouseEntered

    private void paperMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paperMouseExited
        // TODO add your handling code here:
        paper.setBorderPainted(false);
    }//GEN-LAST:event_paperMouseExited

    private void scissorsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scissorsMouseEntered
        // TODO add your handling code here:
        scissors.setBorderPainted(true);
        javax.swing.border.Border b = BorderFactory.createLineBorder(Color.black, 2, true);
        scissors.setBorder(b);
    }//GEN-LAST:event_scissorsMouseEntered

    private void scissorsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scissorsMouseExited
        // TODO add your handling code here:
        scissors.setBorderPainted(false);
    }//GEN-LAST:event_scissorsMouseExited

    private void lizardMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lizardMouseEntered
        // TODO add your handling code here:
        lizard.setBorderPainted(true);
        javax.swing.border.Border b = BorderFactory.createLineBorder(Color.black, 2, true);
        lizard.setBorder(b);
    }//GEN-LAST:event_lizardMouseEntered

    private void lizardMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lizardMouseExited
        // TODO add your handling code here:
        lizard.setBorderPainted(false);
    }//GEN-LAST:event_lizardMouseExited

    private void spockMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spockMouseEntered
        // TODO add your handling code here:
        spock.setBorderPainted(true);
        javax.swing.border.Border b = BorderFactory.createLineBorder(Color.black, 2, true);
        spock.setBorder(b);
    }//GEN-LAST:event_spockMouseEntered

    private void spockMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spockMouseExited
        // TODO add your handling code here:
        spock.setBorderPainted(false);
    }//GEN-LAST:event_spockMouseExited

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        
        // NE VEM ZAKAJ NE DELA
        
               
        if (evt.getKeyCode() == KeyEvent.VK_R) {
            allActionPerformed(0);
        }
        else if (evt.getKeyCode() == KeyEvent.VK_P) {
            allActionPerformed(1);
        }
        else if (evt.getKeyCode() == KeyEvent.VK_S) {
            allActionPerformed(2);
        }
        else if (evt.getKeyCode() == KeyEvent.VK_L) {
            allActionPerformed(3);
        }
        else if (evt.getKeyCode() == KeyEvent.VK_K) {       // spock ima K, da ni isto kot scissors
            allActionPerformed(4);
        }
    }//GEN-LAST:event_formKeyPressed

    private void statisticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statisticsActionPerformed
        // TODO add your handling code here:
        Statistics s = new Statistics();
        s.setVisible(true);
    }//GEN-LAST:event_statisticsActionPerformed

    
    private String choice_to_string (int choice) {
        if (choice == 0) {
            return "ROCK";
        }
        else if (choice == 1) {
            return "PAPER";
        }
        else if (choice == 2) {
            return "SCISSORS";
        }
        else if (choice == 3) {
            return "LIZARD";
        }
        else if (choice == 4) {
            return "SPOCK";
        }
        return "";
    }
    
    private int who_wins (int player_choice, int computer_choice) {
        // 0 - rock   // 1 - paper   // 2 - scissors   // 3 - lizard   // 4 - spock 
        
        // ce indeks stolpca (player_choice) premaga indeks vrstice (computer_choice) vrne 1, ce izgubi -1, sicer 0
        
        int[][] matrix = { {0, 1, -1, -1, 1},
                           {-1, 0, 1, 1, -1},
                           {1, -1, 0, -1, 1},
                           {1, -1, 1, 0, -1},
                           {-1, 1, -1, 1, 0} };
      
        return matrix[computer_choice][player_choice];     
    }
   
    private void popravi_score (int score) {
        if (score == 1) {
            int p_score = Integer.parseInt(player_score.getText());
            p_score++;
            player_score.setText(Integer.toString(p_score));
            win++;
            scores.add(1);
        }
        else if (score == -1) {
            int c_score = Integer.parseInt(computer_score.getText());
            c_score++;
            computer_score.setText(Integer.toString(c_score));
            lost++;
            scores.add(-1);
        }
        else {
            ties++;
            scores.add(0);
        }
    }
    
    
    private void show_computer_choice_icon (int score) {  
        
        javax.swing.border.Border b = BorderFactory.createLineBorder(Color.black, 5, true);
        
        if (score == 0) {
            rock1.setBorderPainted(true);
            rock1.setBorder(b);
        }
        else if (score == 1) {
            paper1.setBorderPainted(true);
            paper1.setBorder(b);
        }
        else if (score == 2) {
            scissors1.setBorderPainted(true);
            scissors1.setBorder(b);
        }
        else if (score == 3) {
            lizard1.setBorderPainted(true);
            lizard1.setBorder(b);
        }
        else if (score == 4) {
            spock1.setBorderPainted(true);
            spock1.setBorder(b);
        }
        
        new java.util.Timer().schedule( 
            new java.util.TimerTask() {
                @Override
                public void run() {
                    rock1.setBorderPainted(false);
                    paper1.setBorderPainted(false);
                    scissors1.setBorderPainted(false);
                    lizard1.setBorderPainted(false);
                    spock1.setBorderPainted(false);
                }
            }, 
            700 
        );
        
    }
    
    Color def = new Color(240,240,240);
    
    private void color_background (int score) {
      //  Color before = player_panel.getBackground();
        
        if (score == 1) { 
            player_panel.setBackground(new Color(185,255,185));
            computer_panel.setBackground(new Color(250,70,70));
        }
        else if (score == -1) {            
            player_panel.setBackground(new Color(250,70,70));
            computer_panel.setBackground(new Color(185,255,185));
        }
        else {
            player_panel.setBackground(new Color(250,250,100));
            computer_panel.setBackground(new Color(250,250,100));
        }
       
        new java.util.Timer().schedule( 
            new java.util.TimerTask() {
                @Override
                public void run() {
                    player_panel.setBackground(def);
                    computer_panel.setBackground(def);
                }
            }, 
            700 
        );
        
    }
    
    
    public void izpisi_v_datoteko() {
        if (ties+win+lost > 99) {
            try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("statistika.txt", true)))) {
                out.write("\r\n\r\nGames played: " + (win+ties+lost) + "\r\n");
                out.write("Wins: " + win + "\r\n");
                out.write("Ties: " + ties + "\r\n");
                out.write("Lost: " + lost + "\r\n");
                
                out.write("\r\nPlayer choices:\r\n");
                for (int i=0; i<player_history.size(); i++) {
                    out.write(player_history.get(i) + " ");
                }
                
                out.write("\r\n\r\nComputer choices:\r\n");
                for (int i=0; i<computer_history.size(); i++) {
                    out.write(computer_history.get(i) + " ");
                }
                
            } catch (IOException ex) {
                ex.printStackTrace();
            }
            
            
            try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("rezultati.txt", true)))) {
                for (int i=0; i<player_history.size(); i++) {
                    out.write(player_history.get(i) + " ");
                }
                out.write("\r\n");
                
                new_gameActionPerformed(new ActionEvent(new Object(), 0, null));
                
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }
    
    
    private int computer_choice_algorithm (ArrayList<Integer> player_history, ArrayList<Integer> computer_history) {    
        // vrne izbiro racunalnika (od 0 do 4)
        
        // random algorithm
        Random r = new Random();
        return r.nextInt(5);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KPSKS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KPSKS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KPSKS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KPSKS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KPSKS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel computer;
    private javax.swing.JLabel computer_chosen;
    private javax.swing.JPanel computer_panel;
    private javax.swing.JLabel computer_score;
    private javax.swing.JLabel dvopicje;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu file;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton lizard;
    private javax.swing.JButton lizard1;
    private javax.swing.JMenuItem new_game;
    private javax.swing.JButton paper;
    private javax.swing.JButton paper1;
    private javax.swing.JLabel player;
    private javax.swing.JLabel player_chosen;
    private javax.swing.JPanel player_panel;
    private javax.swing.JLabel player_score;
    private javax.swing.JPanel result_panel;
    private javax.swing.JButton rock;
    private javax.swing.JButton rock1;
    private javax.swing.JButton scissors;
    private javax.swing.JButton scissors1;
    private javax.swing.JButton spock;
    private javax.swing.JButton spock1;
    private javax.swing.JMenuItem statistics;
    // End of variables declaration//GEN-END:variables
}
